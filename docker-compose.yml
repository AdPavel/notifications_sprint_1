version: '3'

services:
  admin:
    container_name: notification_admin
    build:
      context: ./srv_admin_panel
      dockerfile: Dockerfile
    entrypoint: /opt/app/run_uwsgi.sh
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    expose:
      - "8080"
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
    restart: always

  postgres:
    container_name: notification_postgres
    image: postgres:13.0-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    restart: always
    expose:
      - "5432"

  redis:
    container_name: notification_redis
    image: redis:7-alpine

  celery:
    container_name: notification_celery
    restart: always
    build: ./srv_admin_panel
    env_file:
      - ./.env
    command: celery -A config worker --beat --scheduler django --loglevel=info
    depends_on:
      - redis
      - postgres
      - admin

  movies_rabbitmq:
    image: rabbitmq:3.11.13-management-alpine
    container_name: notification__rabbitmq
    hostname: movies_rabbitmq
    restart: always
    env_file:
      - .env
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
    expose:
      - "5672"

  worker:
    restart: always
    build: ./srv_worker
    container_name: notification_worker
    entrypoint: /opt/app/run.sh
    env_file:
      - ./.env
    volumes:
      - ./template_examples:/opt/app/template_examples
    depends_on:
      - movies_rabbitmq

  nginx:
    container_name: notification_nginx
    restart: on-failure
    image: nginx:latest
    volumes:
      - ./nginx_conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_conf/configs:/etc/nginx/conf.d:ro
      - static_volume:/usr/share/nginx/www/static
      - media_volume:/usr/share/nginx/www/media
    ports:
      - "80:80"

volumes:
  postgres_data:
  static_volume:
  media_volume:
  rabbitmq:
  worker:
